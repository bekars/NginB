
worker_processes  2;

error_log  logs/error.log  info;
pid        logs/nginx.pid;

daemon on;
master_process on;

working_directory /usr/local/nginx;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" "$http_cookie" $upstream_cache_status '
                  '"$upstream_http_expires" "$upstream_http_cache_control" "$upstream_http_etag" "$upstream_http_last_modified" '
                  '$request_time $upstream_response_time "$request_body"';

    access_log  logs/access.log  main;

    #sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  300;

#    gzip  on;
#    gzip_min_length 2;
#    gzip_proxied any;
#    gzip_types text/plain application/xml application/x-javascript text/javascript text/css;

    resolver 8.8.8.8;
    more_set_headers 'Server: BWD-ALY81';

    lua_package_path '/home/baiyu/Git/NginB/lua/?.lua;/home/baiyu/Git/NginB/lua/lib/?.lua';
    lua_package_cpath '/usr/lib/?.so;;';
    lua_max_pending_timers 10240;
    lua_max_running_timers 2560;
    lua_socket_log_errors off;
    lua_shared_dict keys     64m;
    lua_shared_dict ipcache  128m;
    lua_shared_dict conf     128m;
    lua_shared_dict dns      64m;
    lua_shared_dict scanner  64m;
    lua_shared_dict sla      64m;
    lua_shared_dict shCDN    64m;
    lua_need_request_body off;

    server {
        listen       80;
        server_name  localhost;
        root  wwwroot;

        client_max_body_size 100m;

        #charset koi8-r;

        #pagespeed on;
        #pagespeed RewriteLevel CoreFilters;

        # needs to exist and be writable by nginx
        #pagespeed FileCachePath /data/nginx/cache/ngx_pagespeed_cache;

        # This is a temporary workaround that ensures requests for pagespeed
        # optimized resources go to the pagespeed handler.
        location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" { }
        location ~ "^/ngx_pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon$" { }
        
        location ~ \.php$ {
            root  html/wordpress;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
            include fastcgi_params;
        }

        location / {
            more_set_headers 'Cache-Control: max-age=3600';
            root  html;
            index  index.html;
        }
 
        location ~ \.html$ {
            more_set_headers 'Cache-Control: max-age=3600';
            root  wwwroot;
            index  index.html;
        }
 
        location /xizang {
            content_by_lua '
                return ngx.redirect("https://app.yinxiang.com/shard/s20/sh/dc19fbf3-d167-4574-88af-b45649af5262/2501665eb9413764581f7c3a9ede2e7d");
            ';
        }

        # Upload form should be submitted to this location
        location /upload {
            # Pass altered request body to this location
            upload_pass   @upload_php;

            # Store files to this directory
            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
            upload_store /tmp 1;

            # Allow uploaded files to be read only by user
            upload_store_access user:r;

            # Set specified fields in request body
            upload_set_form_field "${upload_field_name}_name" $upload_file_name;
            upload_set_form_field "${upload_field_name}_content_type" $upload_content_type;
            upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;

            # Inform backend about hash and size of a file
            upload_aggregate_form_field "${upload_field_name}_md5" $upload_file_md5;
            upload_aggregate_form_field "${upload_field_name}_size" $upload_file_size;

            upload_pass_form_field "^submit$|^description$";
        }

        # Pass altered request body to a backend
        location @upload_php {
            proxy_pass   http://localhost:9000;
        }

        location = /upload.php {
            root  wwwroot/php;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index upload.php;
            fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
            include fastcgi_params;
        }
    }
    
    include /usr/local/nginx/conf/proxy/*;
}

